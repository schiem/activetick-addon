// Generated by IcedCoffeeScript 1.8.0-e
(function() {
  var ActiveTick, config, fs, iced, main, __iced_k, __iced_k_noop;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  ActiveTick = require('../ActiveTick').ActiveTick;

  fs = require('fs');

  config = require('./config.js');

  main = function() {
    var a, aapl, getQuote, result, sym1, sym2, sym3, sym4, sym5, sym6, yang, ___iced_passed_deferral, __iced_deferrals, __iced_k;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(_this) {
      return (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "/Users/sheldonthomas/Documents/Resplendent/atcontainer/activetick-addon/example/example.iced"
        });
        a = new ActiveTick(__iced_deferrals.defer({
          lineno: 6
        }));
        __iced_deferrals._fulfill();
      });
    })(this)((function(_this) {
      return function() {
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/sheldonthomas/Documents/Resplendent/atcontainer/activetick-addon/example/example.iced"
          });
          a.connect(config.url, config.port, config.api_key, config.username, config.password, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return result = arguments[0];
              };
            })(),
            lineno: 7
          }));
          __iced_deferrals._fulfill();
        })(function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/sheldonthomas/Documents/Resplendent/atcontainer/activetick-addon/example/example.iced"
            });
            a.listRequest('ATConstituentListOptionChain', 'fb', __iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return yang = arguments[0];
                };
              })(),
              lineno: 8
            }));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/Users/sheldonthomas/Documents/Resplendent/atcontainer/activetick-addon/example/example.iced"
              });
              a.listRequest('ATConstituentListOptionChain', 'aapl', __iced_deferrals.defer({
                assign_fn: (function() {
                  return function() {
                    return aapl = arguments[0];
                  };
                })(),
                lineno: 9
              }));
              __iced_deferrals._fulfill();
            })(function() {
              getQuote = function(quote) {
                console.log('getQuote');
                return console.log(quote);
              };
              sym1 = '.' + yang.symbols[22].symbol;
              sym2 = '.' + yang.symbols[4].symbol;
              sym3 = '.' + yang.symbols[188].symbol;
              sym4 = '.' + yang.symbols[588].symbol;
              sym5 = '.' + aapl.symbols[118].symbol;
              sym6 = '.' + aapl.symbols[277].symbol;
              return a.beginQuoteStream([sym1, sym2, sym3, sym4, sym5, sym6], 'StreamRequestSubscribe', getQuote, function(result) {
                return console.log(result);
              });
            });
          });
        });
      };
    })(this));
  };

  if (!module.parent) {
    main();
  }

}).call(this);
